{"version":3,"sources":["src/app/app.js"],"names":["base_url","vue","Vue","el","data","tabLogin","loginPage","mainPage","addTaskBacklog","addTaskTodo","taskListBacklog","taskListTodo","formLogin","email","password","formRegister","name","formAddBacklog","task","formAddTodo","created","checkLocalStorage","filters","dateFormat","date","moment","format","methods","localStorage","getItem","getTaskList","goToAddTaskBacklog","scrollToEnd","goToAddTaskTodo","cancelAddTaskBacklog","cancelAddTaskTodo","container","$el","querySelector","scrollTop","scrollHeight","doLogin","self","notif","dataLogin","axios","post","then","res","code","setItem","payload","Token","clearForm","removeItem","catch","err","console","log","response","doRegister","dataRegister","token","get","headers","Bearer","dataBacklog","filter","category","dataTodo","doAddTaskBacklog","dataAddTaskBacklog","title","doAddTaskTodo","doLogout","clear","form","key","status","message","$swal","icon"],"mappings":"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","file":"app.f5f63223.js","sourceRoot":"..","sourcesContent":["var base_url = 'http://localhost:3000'\n\nvar vue = new Vue({\n  el: \"#app\",\n  data: {\n    tabLogin: 0,\n    loginPage: true,\n    mainPage: false,\n    addTaskBacklog: false,\n    addTaskTodo: false,\n    taskListBacklog: [],\n    taskListTodo: [],\n    formLogin: {\n      email: null,\n      password: null\n    },\n    formRegister: {\n      name: null,\n      email: null,\n      password: null\n    },\n    formAddBacklog: {\n      task: null\n    },\n    formAddTodo: {\n      task: null\n    }\n  },\n  created(){\n    this.checkLocalStorage()\n  },\n  filters: {\n    dateFormat: function (date) {\n      return moment(date).format('DD MMMM YYYY');\n    }\n  },\n  methods: {\n    checkLocalStorage(){\n      if(!localStorage.getItem('token')){\n        this.loginPage = true\n        this.mainPage = false\n      }else{\n        this.loginPage = false\n        this.getTaskList()\n        this.mainPage = true\n      }\n    },\n    goToAddTaskBacklog(){\n      this.addTaskBacklog = true\n      this.scrollToEnd()\n    },\n    goToAddTaskTodo(){\n      this.addTaskTodo = true\n      this.scrollToEnd()\n    },\n    cancelAddTaskBacklog(){\n      this.addTaskBacklog = false\n    },\n    cancelAddTaskTodo(){\n      this.addTaskTodo = false\n    },\n    scrollToEnd: function() {    \t\n      let container = this.$el.querySelector(\"#card-board-content\");\n      container.scrollTop = container.scrollHeight;\n    },\n    doLogin(){\n      let self = this\n      if(self.formLogin.email === null || self.formLogin.password === null){\n        this.notif('error', 'Email or password must be filled')\n      }else{\n        let dataLogin = {\n          email: self.formLogin.email,\n          password: self.formLogin.password\n        }\n        axios.post(`${base_url}/login`, dataLogin)\n        .then(res => {\n          if(res.data.code === 200){\n            localStorage.setItem('token', res.data.payload.Token)\n            this.notif('success', 'Login successfull')\n            self.loginPage = false\n            self.mainPage = true\n            this.clearForm(this.formLogin)\n            this.checkLocalStorage()\n          }else{\n            localStorage.removeItem('token')\n            this.notif('error', 'Login failed!')\n          }\n        })\n        .catch(err => {\n          console.log(err.response)\n          this.notif('error', 'Email or Password wrong!')\n        })\n      }\n    },\n    doRegister(){\n      let self = this\n      if(self.formRegister.name === null || self.formRegister.email === null || self.formRegister.password === null){\n        this.notif('error', 'Name or email or password must be filled')\n      }else{\n        let dataRegister = {\n          name: self.formRegister.name,\n          email: self.formRegister.email,\n          password: self.formRegister.password\n        }\n        axios.post(`${base_url}/register`, dataRegister)\n        .then(res => {\n          this.notif('success', 'Register successfull')\n        })\n        .catch(err => {\n          this.notif('error', 'Register failed')\n        })\n      }\n    },\n    getTaskList(){\n      let self = this\n      let token = localStorage.getItem('token')\n      axios.get(`${base_url}/tasks`, \n      {\n        headers: { Bearer: token }\n      })\n      .then(res => {\n        let dataBacklog = res.data.payload.filter(el => { return el.category === 'backlog' })\n        let dataTodo = res.data.payload.filter(el => { return el.category === 'todo' })\n        self.taskListBacklog = dataBacklog\n        self.taskListTodo = dataTodo\n      })\n      .catch(err => {\n        console.log(err)\n      })\n    },\n    doAddTaskBacklog(){\n      let self = this\n      let token = localStorage.token\n      if(self.formAddBacklog.task === null){\n        this.notif('error', 'Task must be filled')\n      }else{\n        let dataAddTaskBacklog = {\n          title: self.formAddBacklog.task\n        }\n        axios.post(`${base_url}/task`, dataAddTaskBacklog,\n        {\n          headers: { Bearer : token }\n        })\n        .then(res => {\n\n        })\n        .catch(err => {\n\n        })\n      }\n    },\n    doAddTaskTodo(){\n\n    },\n    doLogout(){\n      localStorage.clear()\n      this.mainPage = false\n      this.loginPage = true\n      this.notif('success', 'Log Out')\n    },\n    clearForm(form){\n      for(key in form){\n        form[key] = null\n      }\n    },\n    notif(status, message){\n      this.$swal({\n        icon: status,\n        title: message\n      })\n    }\n  }\n})"]}